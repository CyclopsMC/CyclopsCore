import net.darkhax.curseforgegradle.TaskPublishCurseForge
import net.darkhax.curseforgegradle.Constants as CFG_Constants

plugins {
    id 'multiloader-loader-forge'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
}

sourceSets {
    api {
        resources.srcDirs = []
    }
    main {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
    test {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
}

configurations {
    apiImplementation.extendsFrom(implementation)
    apiRuntimeOnly.extendsFrom(runtimeOnly)
    javadoc.classpath += sourceSets.api.output
}

repositories {
    mavenCentral()
    maven {
        name "Baubles maven repo"
        url "https://jitpack.io"
    }
    maven {
        name "Curios"
        url "https://maven.theillusivec4.top/"
    }
}

dependencies {
    // Project lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

minecraft {
    runs {
        client {
            workingDirectory file('runs/client')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            mods {
                modClientRun {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }

        server {
            workingDirectory file('runs/server')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            mods {
                modServerRun {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }

        data {
            workingDirectory file('runs/data')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            mods {
                modDataRun {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }
    }
}

javadoc {
    source = [sourceSets.main.allJava, sourceSets.api.allJava]
    exclude 'org/cyclops/cyclopscore/modcompat/curios/*'
}

task publishCurseForge(type: TaskPublishCurseForge) {
    dependsOn(tasks.jar)
    apiToken = secrets.curseforgeKey;
    def mainFile = upload(project.curseforge_project_id, jar)
    mainFile.releaseType = secrets.build_number.equals("RELEASE") ? CFG_Constants.RELEASE_TYPE_RELEASE : CFG_Constants.RELEASE_TYPE_BETA
    mainFile.changelogType = "text"
    mainFile.changelog = secrets.changelog
    mainFile.addJavaVersion("Java ${project.java_version}")
    mainFile.addGameVersion(project.minecraft_version)
    mainFile.addModLoader("Forge")
}

modrinth {
    token = secrets.modrinthKey;
    projectId = "${modrinth_project_id}"
    versionNumber = project.minecraft_version + '-' + project.version
    versionName = "${project.version} for Forge ${project.minecraft_version}"
    versionType = secrets.build_number.equals("RELEASE") ? "release" : "beta"
    uploadFile = jar
    gameVersions = [ project.minecraft_version ]
    changelog = provider { secrets.changelog }
}
tasks.modrinth.dependsOn(tasks.jar)
